#!/usr/bin/env python
#
# usage:
#        best_appart.py
#
# Clement <clement@le-corre.eu>
#

import http.client
import json
import time
import urllib.parse
import csv

origin = "Strasbourg+Saint-Denis"
displayOrigin = "Strasbourg Saint-Denis"
origin2 = "Montparnasse-Bienven"
displayOrigin2 = "Montparnasse"
key = ""


stations = ['Abbesses',
'Ablon',
'Acheres+Grand+Cormier',
'Acheres-Ville',
'Aeroport+Charles-de-Gaulle+1',
'Aeroport+Roissy+Charles+de+Gaulle',
'Alesia',
'Alexandre+Dumas',
'Alma+Marceau',
'Anatole+France',
'Antony',
'Anvers',
'Arcueil+-+Cachan',
'Argentine',
'Arpajon',
'Arts+et+Metiers',
'Asnieres+Gennevilliers+Les+Courtilles',
'Assemblee+Nationale',
'Athis-Mons',
'Auber',
'Aubervilliers-Pantin+Quatre+Chemins',
'Aulnay-sous-Bois',
'Avenue+du+president+Kennedy',
'Avenue+Emile+Zola',
'Avenue+Foch',
'Avenue+Henri+Martin',
'Avron',
'Bagneux',
'Balard',
'Barbes+Rochechouart',
'Basilique+de+Saint-Denis',
'Bastille',
'Bel-Air',
'Belleville',
'Berault',
'Bercy',
'Bibliotheque+Francois+Mitterand',
'Bibliotheque+Francois+Mitterand',
'Bievres',
'Billancourt',
'Bir-Hakeim',
'Blanche',
'Bobigny+Pablo+Picasso',
'Bobigny-Pantin+Raymond+Queneau',
'Boissiere',
'Boissy-Saint-Leger',
'Bolivar',
'Bonne+Nouvelle',
'Botzaris',
'Boucicaut',
'Boulainvilliers',
'Boulogne+Jean+Jaures',
'Boulogne+Pont+de+Saint-Cloud',
'Bouray',
'Bourg-la-Reine',
'Bourse',
'Breguet+Sabin',
'Bretigny',
'Breuillet+Bruyeres-le-Chatel',
'Breuillet-Village',
'Brie-sur-Marne',
'Brochant',
'Bry-sur-Marne',
'Bures-sur-Yvette',
'Bussy-Saint-Georges',
'Buttes+Chaumont',
'Buzenval',
'Cadet',
'Cambronne',
'Campo+Formio',
'Cardinal+Lemoine',
'Carrefour+Pleyel',
'Censier+Daubenton',
'Cergy-Le+Haut',
'Cergy-Prefecture',
'Cergy-Saint-Christophe',
'Cernay',
'Chamarande',
'Champigny',
'Champs+de+Mars+Tour+Eiffel',
'Champs+Elysees+Clemenceau',
'Chardon+Lagache',
'Charenton+-+Ecoles',
'Charles+de+Gaulle+Etoile',
'Charles+Michels',
'Charonne',
'Chateau+d\'eau',
'Chateau+de+Vincennes',
'Chateau+Landon',
'Chateau+rouge',
'Chatelet',
'Chatelet+-+Les+Halles',
'Chatillon-Montrouge',
'Chatou-Croissy',
'Chaussee+d\'Antin+La+Fayette',
'Chaville+-+Velizy',
'Chemin+d\'Antony',
'Chemin+Vert',
'Chevaleret',
'Chilly-Mazarin',
'Choisy-le-Roi',
'Cite',
'Cite+Universitaire',
'Cluny+La+Sorbonne',
'Colonel+Fabien',
'Commerce',
'Concorde',
'Conflans-Fin+d\'Oise',
'Convention',
'Corentin+Cariou',
'Corentin+Celton',
'Corvisart',
'Cour+Saint-Emilion',
'Courcelle-sur-Yvette',
'Courcelles',
'Couronnes',
'Creteil+-+L\'Echat',
'Creteil+-+Universite',
'Creteil+Pointe+du+Lac',
'Creteil+Prefecture',
'Crimee',
'Croix+de+Chavaux',
'Danube',
'Daumesnil',
'Denfert-Rochereau',
'Dourdan',
'Dourdan-la-Foret',
'Drancy',
'Dugommier',
'Dupleix',
'Duroc',
'Ecole+Militaire',
'Ecole+veterinaire+de+Maisons-Alfort',
'Edgar+Quinet',
'Eglise+d\'Auteuil',
'Eglise+de+Pantin',
'Egly',
'Epinay-sur-Orge',
'Epinay-sur-Seine',
'Ermont+Eaubonne',
'Esplanade+de+La+Defense',
'Etampes',
'Etienne+Marcel',
'Etrechy',
'Europe',
'Exelmans',
'Faidherbe+Chaligny',
'Falguiere',
'Felix+Faure',
'Filles+du+Calvaire',
'Fontaine-Michalon',
'Fontenay+aux-Roses',
'Fontenay-sous-Bois',
'Fort+d\'Aubervilliers',
'Franconville+Le+Plessis-Bouchard',
'Franklin+D.+Roosevelt',
'Front+populaire',
'Gabriel+Peri+Asnieres-Gennevilliers',
'Gaite',
'Gallieni',
'Gambetta',
'Gare+d\'Austerlitz',
'Gare+d\'Austerlitz',
'Gare+de+l\'Est',
'Gare+de+Lyon',
'Gare+du+Nord',
'Garibaldi',
'Gennevilliers',
'Gentilly',
'Georges+V',
'Gif-sur-Yvette',
'Glaciere',
'Goncourt',
'Grands+Boulevards',
'Gravigny-Ballizy',
'Guy+Moquet',
'Havre+Caumartin',
'Hoche',
'Hotel+de+Ville',
'Houilles+Carrieres-sur-Seine',
'Iena',
'Igny',
'Invalides',
'Invalides',
'Issy',
'Issy+Val+de+Seine',
'Ivry-sur-Seine',
'Jacques+Bonsergent',
'Jasmin',
'Jaures',
'Javel',
'Javel+Andre+Citroen',
'Joinville-le-Pont',
'Jourdain',
'Jouy-en-Josas',
'Jules+Joffrin',
'Jussieu',
'Juvisy',
'Kleber',
'La+Chapelle',
'La+Courneuve+-+Aubervilliers',
'La+Courneuve+8+Mai+1945',
'La+Croix+de+Berny',
'La+Defense+Grande+Arche',
'La+Fourche',
'La+Hacquiniere',
'La+Motte+Picquet+Grenelle',
'La+Muette',
'La+Muette',
'La+Norville+Saint-Germain-les-Arpajon',
'La+Plaine+-+Stade+de+France',
'La+Tour+Maubourg',
'La+Varenne+Chennevieres',
'Lamarck+Caulaincourt',
'Laplace',
'Lardy',
'Laumiere',
'Le+Blanc-Mesnil',
'Le+Bourget',
'Le+Guichet',
'Le+Kremlin+Bicetre',
'Le+Parc+de+Saint-Maur',
'Le+Peletier',
'Le+Vesinet-Centre',
'Le+Vesinet-Le-Pecq',
'Ledru+-+Rollin',
'Les+Agnettes',
'Les+Ardoines',
'Les+Baconnets',
'Les+Gobelins',
'Les+Gresillons',
'Les+Halles',
'Les+Sablons',
'Les+Saules',
'Liberte',
'Liege',
'Lognes',
'Longjumeau',
'Louis+Blanc',
'Louise+Michel',
'Lourmel',
'Louvre+Rivoli',
'Lozere+Ecole+Polytechnique',
'Luxembourg',
'Mabillon',
'Madeleine',
'Mairie+d\'Issy',
'Mairie+d\'Ivry',
'Mairie+de+Clichy',
'Mairie+de+Montreuil',
'Mairie+de+Montrouge',
'Mairie+de+Saint-Ouen',
'Mairie+des+Lilas',
'Maison+Blanche',
'Maisons-Alfort+-+Stade',
'Maisons-Alfort+Les+Juilliottes',
'Maisons-Laffitte',
'Malakoff+Plateau+de+Vanves',
'Malakoff+Rue+Etienne+Dolet',
'Malesherbes',
'Maraichers',
'Marcadet+Poissonniers',
'Marcel+Sembat',
'Marne-La-Vallee+Chessy+(Parc+Disneyland)',
'Marolles-en-Hurepoix',
'Marx+Dormoy',
'Massy+-+Palaiseau',
'Massy+-+Verrieres',
'Maubert+-+Mutualite',
'Menilmontant',
'Meudon-val-Fleury',
'Michel+Ange+Auteuil',
'Michel+Ange+Molitor',
'Michel+Bizot',
'Mirabeau',
'Miromesnil',
'Monceau',
'Montgallet',
'Montigny+Beauchamp',
'Montparnasse-Bienvenue',
'Mouton+Duvernet',
'Musee+d\'Orsay',
'Nanterre-Prefecture',
'Nanterre-Universite',
'Nanterre-Ville',
'Nation',
'Nationale',
'Neuilly-Plaisance',
'Neuilly-Porte+Maillot',
'Neuville-Universite',
'Nogent-sur-Marne',
'Noisiel',
'Noisy-Champs',
'Noisy-le-Grand+Mont+d\'Est',
'Notre-Dame+de-Lorette',
'Notre-Dame+des-Champs',
'Oberkampf',
'Odeon',
'Olympiades',
'Opera',
'Orly-Ville',
'Orsay+-+Ville',
'Ourcq',
'Palais+Royal+Musee+du+Louvre',
'Palaiseau',
'Palaiseau+-+Villebon',
'Parc+de+Sceaux',
'Parc+des+Expositions',
'Parmentier',
'Passy',
'Pasteur',
'Pelleport',
'Pere+Lachaise',
'Pereire',
'Pereire-Levallois',
'Pernety',
'Petit+Jouy-les-Loges',
'Petit-Vaux',
'Philippe+Auguste',
'Picpus',
'Pierre+Curie',
'Pierrelaye',
'Pigalle',
'Place+d\'Italie',
'Place+de+Clichy',
'Place+des+Fetes',
'Place+Monge',
'Plaisance',
'Poissonniere',
'Poissy',
'Pont+de+l\'Alma',
'Pont+de+Levallois+Becon',
'Pont+de+Neuilly',
'Pont+de+Rungis+Aeroport+d\'Orly',
'Pont+de+Sevres',
'Pont+du+Garigliano',
'Pont+Marie',
'Pont+Neuf',
'Pontoise',
'Porchefontaine',
'Port-Royal',
'Porte+d\'Auteuil',
'Porte+d\'Italie',
'Porte+d\'Ivry',
'Porte+d\'Orleans',
'Porte+Dauphine',
'Porte+de+Bagnolet',
'Porte+de+Champerret',
'Porte+de+Charenton',
'Porte+de+Choisy',
'Porte+de+Clichy',
'Porte+de+Clichy',
'Porte+de+Clignancourt',
'Porte+de+la+Chapelle',
'Porte+de+la+Villette',
'Porte+de+Montreuil',
'Porte+de+Pantin',
'Porte+de+Saint-Cloud',
'Porte+de+Saint-Ouen',
'Porte+de+Vanves',
'Porte+de+Versailles',
'Porte+de+Vincennes',
'Porte+des+Lilas',
'Porte+Doree',
'Porte+Maillot',
'Pre+St-Gervais',
'Pyramides',
'Pyrenees',
'Quai+de+la+Gare',
'Quai+de+la+Rapee',
'Quatre+Septembre',
'Rambuteau',
'Ranelagh',
'Raspail',
'Reaumur+Sebastopol',
'Rennes',
'Republique',
'Reuilly+-+Diderot',
'Richard+Lenoir',
'Richelieu+Drouot',
'Riquet',
'Robespierre',
'Robinson',
'Rome',
'Rue+de+la+Pompe',
'Rue+des+Boulets',
'Rue+du+Bac',
'Rue+Saint-Maur',
'Rueil-Malmaison',
'Rungis+La+Fraternelle',
'Saint+francois+Xavier',
'Saint+Germain+des-Pres',
'Saint+Marcel',
'Saint-Ambroise',
'Saint-Augustin',
'Saint-Cheron',
'Saint-Cyr',
'Saint-Denis+-+Universite',
'Saint-Denis+Porte+de+Paris',
'Saint-Fargeau',
'Saint-Georges',
'Saint-Germain-en-Laye',
'Saint-Gratien',
'Saint-Jacques',
'Saint-Lazare',
'Saint-Mande',
'Saint-Martin+d\'Etampes',
'Saint-Maur-Creteil',
'Saint-Michel',
'Saint-Michel-sur-Orge',
'Saint-Ouen',
'Saint-Ouen-l\'Aumone',
'Saint-Ouen-l\'Aumone+Liesse',
'Saint-Paul',
'Saint-Philippe+du+Roule',
'Saint-Placide',
'Saint-Quentin-en-Yvelynes',
'Saint-Remy-les-Chevreuse',
'Saint-Sebastien+Froissart',
'Saint-Sulpice',
'Sainte-Gennevieve-des-Bois',
'Sartrouville',
'Savigny-sur-Orge',
'Sceaux',
'Segur',
'Sentier',
'Sermaise',
'Sevran+-+Beaudottes',
'Sevres+Babylone',
'Sevres+Lecourbe',
'Simplon',
'Solferino',
'St-Michel+Notre-Dame',
'Stalingrad',
'Strasbourg+Saint-Denis',
'Sucy-Bonneuil',
'Sully+Morland',
'Telegraphe',
'Temple',
'Ternes',
'Tolbiac',
'Torcy',
'Trinite+d\'Estienne+d\'Orves',
'Trocadero',
'Tuileries',
'Val+d\'Europe',
'Val+de+Fontenay',
'Vaneau',
'Varenne',
'Vauboyen',
'Vaugirard',
'Vavin',
'Versailles+Chantiers',
'Versailles+Rive+Gauche',
'Victor+Hugo',
'Villejuif+Leo+Lagrange',
'Villejuif+Paul+Vaillant-Couturier',
'Villejuif-Louis+Aragon',
'Villeneuve-le-Roi',
'Villepinte',
'Villiers',
'Vincennes',
'Viroflay+Rive+Gauche',
'Vitry-sur-Seine',
'Volontaires',
'Voltaire',
'Wagram']

csvfile = open('out.csv', 'w', newline='')
w = csv.writer(csvfile, delimiter=';', quoting=csv.QUOTE_MINIMAL)
w.writerow( ["Station","Duration "+displayOrigin,"Duration "+displayOrigin, "Duration "+displayOrigin2,"Duration "+displayOrigin2, "Distance "+displayOrigin, "Distance "+displayOrigin, "Distance "+displayOrigin2, "Distance "+displayOrigin2] )

conn = http.client.HTTPSConnection("maps.googleapis.com")
for station in stations:
    #First origin
    url = "/maps/api/directions/json?mode=transit&origin="+origin+"&destination="+station+",Paris&key="+key
    urllib.parse.quote_plus(url)
    conn.request("GET", url)
    res = conn.getresponse()
    data = res.read()
    try:
        data_decoded = json.loads(data.decode("utf-8"))
        print (station)
        for routes in data_decoded["routes"]:
            for legs in routes["legs"]:
                print(legs["duration"]["text"])
                print(legs["distance"]["text"])
                firstDurationText = legs["duration"]["text"]
                firstDistanceText = legs["distance"]["text"]
                firstDurationValue = legs["duration"]["value"]
                firstDistanceValue = legs["distance"]["value"]
    except ValueError:  # includes simplejson.decoder.JSONDecodeError
        print('Decoding JSON has failed')

    #second origin
    url = "/maps/api/directions/json?mode=transit&origin="+origin2+"&destination="+station+",Paris&key="+key
    urllib.parse.quote_plus(url)
    conn.request("GET", url)
    res = conn.getresponse()
    data = res.read()
    try:
        data_decoded = json.loads(data.decode("utf-8"))
        print (station)
        for routes in data_decoded["routes"]:
            for legs in routes["legs"]:
                print(legs["duration"]["text"])
                print(legs["distance"]["text"])
                secondDurationText = legs["duration"]["text"]
                secondDistanceText = legs["distance"]["text"]
                secondDurationValue = legs["duration"]["value"]
                secondDistanceValue = legs["distance"]["value"]
    except ValueError:  # includes simplejson.decoder.JSONDecodeError
        print('Decoding JSON has failed')
    w.writerow( [station, firstDurationText, firstDurationValue, secondDurationText ,secondDurationValue, firstDistanceText, firstDurationValue, secondDistanceText, secondDurationValue])
    print ("----")
    print ("")
    time.sleep(1)
